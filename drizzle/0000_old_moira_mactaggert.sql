CREATE TABLE IF NOT EXISTS "private_player_state" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "private_player_state_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" uuid NOT NULL,
	"table_id" bigint NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"hand" integer[]
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "private_table_state" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "private_table_state_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp DEFAULT now() NOT NULL,
	"remaining_deck" integer[] NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "public_tables" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "public_tables_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp DEFAULT now() NOT NULL,
	"pot" double precision DEFAULT 0,
	"current_turn" smallint DEFAULT 0,
	"button" smallint DEFAULT 0
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "private_player_state" ADD CONSTRAINT "private_player_state_table_id_public_tables_id_fk" FOREIGN KEY ("table_id") REFERENCES "public"."public_tables"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "private_player_state" ADD CONSTRAINT "private_player_state_user_id_users_id_fk" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON DELETE restrict ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "private_table_state" ADD CONSTRAINT "private_table_state_id_public_tables_id_fk" FOREIGN KEY ("id") REFERENCES "public"."public_tables"("id") ON DELETE cascade ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE UNIQUE INDEX IF NOT EXISTS "user_table_state" ON "private_player_state" USING btree ("user_id","table_id");